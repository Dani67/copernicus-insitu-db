# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-24 09:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('picklists', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CopernicusService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('website', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DataGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('note', models.TextField(blank=True)),
                ('coverage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.Coverage')),
                ('data_format', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.DataFormat')),
                ('data_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.DataType')),
                ('frequency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.Frequency')),
                ('inspire_themes', models.ManyToManyField(to='picklists.InspireTheme')),
                ('policy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.Policy')),
                ('quality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.Quality')),
            ],
        ),
        migrations.CreateModel(
            name='DataRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('information_costs', models.BooleanField(default=False)),
                ('handling_costs', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True)),
                ('data_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insitu.DataGroup')),
                ('level_of_compliance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.ComplianceLevel')),
            ],
        ),
        migrations.CreateModel(
            name='DataResponsible',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_network', models.BooleanField(default=False)),
                ('countries', models.ManyToManyField(to='picklists.Country')),
                ('members', models.ManyToManyField(blank=True, related_name='_dataresponsible_members_+', to='insitu.DataResponsible')),
            ],
        ),
        migrations.CreateModel(
            name='DataResponsibleDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(max_length=10)),
                ('website', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=100)),
                ('contact_person', models.CharField(max_length=100)),
                ('responsible_type', models.IntegerField(choices=[(1, 'Commercial'), (2, 'Public'), (3, 'Institutional')], db_index=True)),
                ('data_responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insitu.DataResponsible')),
            ],
            options={
                'verbose_name_plural': 'data responsible details',
            },
        ),
        migrations.CreateModel(
            name='DataResponsibleRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(choices=[(1, 'Originator'), (2, 'Distributor')], db_index=True)),
                ('data_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insitu.DataGroup')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insitu.DataResponsible')),
            ],
        ),
        migrations.CreateModel(
            name='EntrustedEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('website', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'entrusted entities',
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold', models.CharField(max_length=100)),
                ('breakthrough', models.CharField(max_length=100)),
                ('goal', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acronym', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('note', models.TextField(blank=True)),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insitu.Component')),
                ('coverage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.Coverage')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='picklists.ProductGroup')),
            ],
        ),
        migrations.CreateModel(
            name='ProductRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(blank=True)),
                ('barriers', models.ManyToManyField(to='picklists.Barrier')),
                ('criticality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.Criticality')),
                ('distance_to_target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.TargetDistance')),
                ('level_of_definition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.DefinitionLevel')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insitu.Product')),
                ('relevance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.Relevance')),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('note', models.TextField(blank=True)),
                ('dissemination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.Dissemination')),
                ('frequency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='insitu.Metric')),
                ('horizontal_resolution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='insitu.Metric')),
                ('quality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.Quality')),
                ('timeliness', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='insitu.Metric')),
                ('uncertainty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='insitu.Metric')),
                ('vertical_resolution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='insitu.Metric')),
            ],
        ),
        migrations.AddField(
            model_name='productrequirement',
            name='requirement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insitu.Requirement'),
        ),
        migrations.AddField(
            model_name='product',
            name='requirements',
            field=models.ManyToManyField(through='insitu.ProductRequirement', to='insitu.Requirement'),
        ),
        migrations.AddField(
            model_name='product',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.ProductStatus'),
        ),
        migrations.AddField(
            model_name='datarequirement',
            name='requirement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insitu.Requirement'),
        ),
        migrations.AddField(
            model_name='datagroup',
            name='requirements',
            field=models.ManyToManyField(through='insitu.DataRequirement', to='insitu.Requirement'),
        ),
        migrations.AddField(
            model_name='datagroup',
            name='responsibles',
            field=models.ManyToManyField(through='insitu.DataResponsibleRelation', to='insitu.DataResponsible'),
        ),
        migrations.AddField(
            model_name='datagroup',
            name='timeliness',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='picklists.Timeliness'),
        ),
        migrations.AddField(
            model_name='component',
            name='entrusted_entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insitu.EntrustedEntity'),
        ),
        migrations.AddField(
            model_name='component',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='insitu.CopernicusService'),
        ),
    ]
